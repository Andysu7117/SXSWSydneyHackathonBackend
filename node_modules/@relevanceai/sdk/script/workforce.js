"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workforce = void 0;
const client_js_1 = require("./client.js");
const const_js_1 = require("./const.js");
const task_js_1 = require("./task/task.js");
const workforce_strategy_js_1 = require("./task/workforce-strategy.js");
const utils_js_1 = require("./utils.js");
class Workforce {
    static async get(id, client = client_js_1.Client.default()) {
        const config = await client.fetch(`/workforce/items/${id}`);
        return new Workforce(config, client);
    }
    client;
    #config;
    constructor(config, client) {
        this.#config = config;
        this.client = client;
    }
    get id() {
        return this.#config.id;
    }
    get region() {
        return this.client.region;
    }
    get project() {
        return this.client.project;
    }
    get name() {
        return this.#config.workforce_metadata.name;
    }
    async getTask(id) {
        return await workforce_strategy_js_1.WorkforceStrategy.get(id, this, this.client);
    }
    async sendMessage(message, task) {
        let taskId;
        // embed keys require a task prefixing for new tasks
        if (!task && this.client.isEmbedKey()) {
            taskId = [this.client.key.taskPrefix, await (0, utils_js_1.randomUUID)()].join(const_js_1.TASK_PREFIX_DELIM);
        }
        else if (task) {
            taskId = task.id;
        }
        const { workforce_task_id: taskIdResponse } = await this.client.fetch("/workforce/trigger", {
            method: "POST",
            body: JSON.stringify({
                workforce_id: this.id,
                workforce_task_id: taskId,
                trigger: {
                    message: {
                        role: "user",
                        content: message,
                        attachments: [],
                    },
                },
            }),
        });
        if (task) {
            task[task_js_1.resetBackoffDuration]();
        }
        return task ?? this.getTask(taskIdResponse);
    }
}
exports.Workforce = Workforce;
