import { type Agent, type AgentTaskState } from "../agent.js";
import { Client } from "../client.js";
import type { AnyTaskMessage } from "../message/task.js";
import { Task, type TaskMetadata, type TaskStrategy } from "./task.js";
export type AgentTaskMetadata = {
    knowledge_set: string;
    insert_date: string;
    update_date: string;
    conversation: {
        created_by_user_id: string;
        state: AgentTaskState;
        title: string;
    };
};
export declare class AgentStrategy implements TaskStrategy<Agent> {
    static get(id: string, agent: Agent, client?: Client): Promise<Task<Agent>>;
    private readonly id;
    private readonly agent;
    private readonly client;
    constructor(id: string, agent: Agent, client: Client);
    get subject(): Agent;
    getMetadata(): Promise<TaskMetadata>;
    getMessages({ after }?: {
        after?: Date;
    }): Promise<AnyTaskMessage[]>;
}
