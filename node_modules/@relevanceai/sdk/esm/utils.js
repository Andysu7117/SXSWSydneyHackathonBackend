export function abortPromise(signal, reject) {
    return new Promise((res, rej) => signal.addEventListener("abort", () => reject ? rej() : res()));
}
export function delay(timeout) {
    return new Promise((done) => setTimeout(done, typeof timeout === "number" ? timeout : timeout()));
}
export function cleanPath(path, version = "latest") {
    return `/${version}/${path.trim().replace(/^\/+/, "")}`;
}
export async function randomUUID() {
    if (typeof crypto !== "undefined") {
        return crypto.randomUUID();
    }
    // @ts-ignore allow this import for node builds
    const cryptoModule = await import("node:crypto");
    return cryptoModule.randomUUID();
}
export function getFileExtension(filename) {
    const dot = filename.lastIndexOf(".");
    return dot >= 0 ? filename.slice(dot + 1) : "";
}
